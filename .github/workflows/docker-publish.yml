name: Docker

on:
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  API_IMAGE_NAME: ${{ github.repository }}-api
  UI_IMAGE_NAME: ${{ github.repository }}-ui

jobs:
  test-api:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Run API tests
      working-directory: ./api
      run: |
        go mod tidy
        go test -v ./tests

  build-api:
    needs: test-api
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4


    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226

    - name: Log into registry ${{ env.REGISTRY }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract API metadata (tags, labels)
      id: meta-api
      uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934
      with:
        images: ${{ env.REGISTRY }}/${{ env.API_IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push API Docker image
      id: build-and-push-api
      uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09
      with:
        context: ./api
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta-api.outputs.tags }}
        labels: ${{ steps.meta-api.outputs.labels }}
        cache-from: type=gha,scope=api
        cache-to: type=gha,mode=max,scope=api


  build-ui:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4


    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226

    - name: Log into registry ${{ env.REGISTRY }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract UI metadata (tags, labels)
      id: meta-ui
      uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934
      with:
        images: ${{ env.REGISTRY }}/${{ env.UI_IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push UI Docker image
      id: build-and-push-ui
      uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09
      with:
        context: ./ui
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta-ui.outputs.tags }}
        labels: ${{ steps.meta-ui.outputs.labels }}
        cache-from: type=gha,scope=ui
        cache-to: type=gha,mode=max,scope=ui

