version: '3.8'

services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - DATABASE_URL=/app/data/linker.db
      - DEFAULT_DOMAIN=localhost:3000
      - ALLOWED_DOMAINS=localhost:3000,localhost:8080
      - JWT_SECRET=dev-secret-change-in-production
      - ANALYTICS=true
      - ENVIRONMENT=development
      - S3_ENABLED=true
      - S3_ENDPOINT=minio:9000
      - S3_REGION=us-east-1
      - S3_ACCESS_KEY_ID=minioadmin
      - S3_SECRET_ACCESS_KEY=minioadmin
      - S3_BUCKET_NAME=linker-files
      - S3_USE_SSL=false
      - S3_MAX_FILE_SIZE_MB=100
    volumes:
      - api_data:/app/data
    depends_on:
      minio:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - linker-network

  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - linker-network

  minio:
    image: minio/minio:RELEASE.2024-08-03T04-33-23Z
    ports:
      - "9000:9000"
      - "9001:9001"  # MinIO Console
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - linker-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # Initialize MinIO bucket
  minio-init:
    image: minio/mc:RELEASE.2024-07-31T15-58-33Z
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set minio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb minio/linker-files --ignore-existing;
      /usr/bin/mc policy set public minio/linker-files;
      exit 0;
      "
    networks:
      - linker-network

volumes:
  api_data:
  minio_data:

networks:
  linker-network:
    driver: bridge